\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{src/magnus.pamphlet}
\author{Roger Needham and Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{Magnus Inventory}
\subsection{Abelian groups}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute the canonical decomposition of A %ProbAbeliangroup.html#1
\item Compute the order of A                   %ProbAbeliangroup.html#2
\item Compute the order of the torsion subgroup of  A %ProbAbeliangroup.html#3
\item Compute the primary decomposition of  A  %ProbAbeliangroup.html#4
\item Compute the torsion-free rank of  A      %ProbAbeliangroup.html#5
\item Compute the torsion subgroup of  A       %ProbAbeliangroup.html#6
\item Is  A finite ?                           %ProbAbeliangroup.html#7
\item Is  A free abelian ?                     %ProbAbeliangroup.html#8
\item Is  A trivial ?                          %ProbAbeliangroup.html#9
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Compute the canonical decomposition for  H 
\item Compute the index of  H in  A 
\item Compute the isolator of  H in  A 
\item Compute the order of  H 
\item Compute the order of the torsion subgroup of  H 
\item Compute the primary decomposition for  H 
\item Compute the torsion-free rank of  H 
\item Is  H isolated in  A 
\item Is  H pure in  A ? 
\item Is  H =  A ? 
\item Is  H trivial ? 
\item Compute a virtual free complement of  H in  A 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the canonical decomposition of w 
\item Compute the maximal root of w 
\item Compute the order of w 
\item Compute the p-height of w 
\item Find the inverse of w 
\item Does w generate a direct summand ? 
\item Is w a proper power ? 
\item Is the subgroup generated by w pure ? 
\item Is w trivial in  A ? 
\item Compute the primary decomposition of w 
\item Reduce w 
\end{list}
\subsubsection{Algorithms involving words and subgroups}
\begin{list}{}
\item Is w in  H ? 
\item Compute the order of w modulo  H 
\end{list}
\subsubsection{Algorithms involving maps}
\begin{list}{}
\item Find the inverse of  h 
\item Compute the order of  h 
\item Does m extend to a homomorphism ? 
\item Is  h an automorphism ? 
\item Is  h an epimorphism ? 
\item Is  h a monomorphism ? 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Is w1 = w2 ? 
\item Is w1 a power of w2 ? 
\item Compute the product w1 w2, in abelian form 
\end{list}
\subsubsection{Algorithms involving two subgroups}
\begin{list}{}
\item Compute the join of  H1 and  H2 
\item Does  H1 contain  H2 ? 
\item Is  H1 =  H2 ? 
\item Is  H1 isomorphic to  H2 ? 
\end{list}
\subsection{Amalgamated products}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute the canonical decomposition of  G abelianized 
\item Compute an integral homology group of  G 
\item Find a finite rewriting system for  G 
\item Find a ShortLex automatic structure for  G 
\item Is  G free ? 
\item Is  G hyperbolic ? 
\item Is  G metric small cancellation ? 
\item Is  G perfect 
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Enumerate relators for  H 
\item Is  H abelian ? 
\item Is  H trivial ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the centralizer of w in  G 
\item Compute the cyclic normal form of w 
\item Compute the inverse of w in the freely reduced form 
\item Compute the maximal root of w in  G 
\item Compute the normal form of w 
\item Compute the reduced form of w 
\item Cyclically reduce w 
\item Find the i-th initial segment of the freely reduced form of w 
\item Find the i-th terminal segment of the freely reduced form of w 
\item Freely reduce w 
\item Is w proper power in  G ? 
\item Is w trivial in  G ? 
\end{list}
\subsubsection{Algorithms involving maps}
\begin{list}{}
\item Extend m to a homomorphism 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Are w2 and w1 conjugate in  F ? 
\item Compute the product w2 * w1
\item Compute the product w1 * w2 
\item Is w2 = w1 ? 
\item Is w1 a proper power of w2 ?
\item Is w2 a proper power of w1 ? 
\end{list}
\subsubsection{Make another object}
\begin{list}{}
\item Abelian Quotient of  G 
\item Another Presentation of  G 
\item Nilpotent Quotient of  G 
\item Quotient of  G 
\end{list}
\subsection{Finitely Presented groups}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute the canonical decomposition of  G abelianized 
\item Compute an integral homology group of  G 
\item Compute the order of  G 
\item Compute a system of Schreier representatives for G, when  G is finite 
\item Find a finite rewriting system for  G 
\item Find a permutation representation of G when  G is finite 
\item Find a ShortLex automatic structure for  G 
\item Is  G abelian ? 
\item Is  G finite ? 
\item Is  G metric small cancellation ? 
\item Is  G nilpotent ? 
\item Is  G trivial ? 
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Compute the index of  H in  G 
\item Compute a presentation for  H 
\item Compute a Schreier transversal of  H in  G 
\item Enumerate relators for  H 
\item Find a permutation representation of G on the cosets of  H in  G 
\item Is  H abelian ? 
\item Is  H central ? 
\item Is  H nilpotent ? 
\item Is  H trivial ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the inverse of w in the freely reduced form 
\item Cyclically reduce w 
\item Find the i-th initial segment of the freely reduced form of w 
\item Find the Schreier representative of w 
\item Find the i-th terminal segment of the freely reduced form of w 
\item Freely reduce w 
\item Is w central in  G ? 
\item Is w of finite order in  G ? 
\item Is w trivial in  G ? 
\end{list}
\subsubsection{Algorithms involving words and subgroups}
\begin{list}{}
\item Find the Schreier representative of w modulo  H 
\end{list}
\subsubsection{Algorithms involving maps}
\begin{list}{}
\item Does m extend to a homomorphism ? 
\end{list}
\subsubsection{Algorithms involving maps and subgroups}
\begin{list}{}
\item Compute the image of  H under  h 
\end{list}
\subsubsection{Algorithms involving maps and words}
\begin{list}{}
\item Compute the image of w under  h 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Are w1 and w2 conjugate in  G ? 
\item Is w1 = w2 ? 
\item Compute the product w1 * w2 
\end{list}
\subsection{Free groups}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Find the n-th element of  F 
\item Is  F automatic ? 
\item Randomly enumerate automorphisms of  F 
\item Randomly enumerate automorphisms of  F of finite order  
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Compute a finite index subgroup of F with  H as a free factor 
\item Compute a Nielsen basis for  H 
\item Compute the normiliser of  H in  F ? 
\item Compute the rank of  H ? 
\item Is  H malnormal in  F ? 
\item Is  H normal in  F ? 
\item Is  H trivial ? 
\item What is the index of  H in  F ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the centralizer of w in  F 
\item Compute the inverse of w in freely reduced form 
\item Compute the maximal root of w in  F 
\item Cyclically reduce w 
\item Find the i-th initial segment of the freely reduced form of w 
\item Find the i-th terminal segment of the freely reduced form of w 
\item Freely reduce w 
\item Is w a commutator in  F ? 
\item Is w in the commutator subgroup of  F ? 
\item Is w part of a basis of  F ? 
\item Is w a proper power in  F ? 
\item Is w trivial in  F ? 
\end{list}
\subsubsection{Algorithms involving words and subgroups}
\begin{list}{}
\item Compute the right Schreier representative of w mod  H 
\item Does a conjugate of w represent an element of  H ? 
\item Does a power of w represent an element of  H ? 
\item Does w represent an element of  H ? 
\item Find the canonical decomposition of w in the Nielsen basis for H 
\end{list}
\subsubsection{Algorithms involving maps}
\begin{list}{}
\item Extend m to a homomorphism 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Are w2 and w1 conjugate in  F ? 
\item Compute the product w2 * w1			
\item Compute the product w1 * w2 
\item Is w2 = w1 ? 
\end{list}
\subsubsection{Make another object}
\begin{list}{}
\item Abelian Quotient of  F 
\item Amalgamated product 
\item Another Presentation of  F 
\item Nilpotent Quotient of  F 
\item Quotient of  F 
\end{list}
\subsubsection{Equations}
\begin{list}{}
\item Find a solution of  E 
\end{list}
\subsubsection{Quadratic equation}
\begin{list}{}
\item Find basic solutions of the equation  E = 1 
\item Find a surface form of  E 
\item Solve the equation  E = 1 
\end{list}
\subsubsection{Algorithms involving sets}
\begin{list}{}
\item Is  S part of basis of  F ? 
\end{list}
\subsubsection{Algorithms involving homomorphisms and words}
\begin{list}{}
\item Compute the image of w under  h 
\end{list}
\subsubsection{Algorithms involving homomorphisms}
\begin{list}{}
\item Compute the inverse of  h 
\item Express  h as a product of Whitehead automorphisms 
\item Is  h an automorphism ? 
\item Is  h an epimorphism ? 
\item Is  h an IA-automorphism ? 
\item Is  h an inner automorphism 
\item Is  h a monomorphism ? 
\item Is  h of finite order ? 
\end{list}
\subsubsection{Algorithms involving tuples}
\begin{list}{}
\item Reduce  T by Whitehead automorphisms 
\end{list}
\subsection{Free nilpotent groups}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute a basis of  N 
\item Find a  presentation of  N 
\item Find a term of lower central series of  N 
\item Compute the Hirsch number of  N 
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Compute a basis for  H 
\item Compute the Hirsch length of  H 
\item Compute the index of  H in  N 
\item Find the normal closure of  H in  N 
\item Find the normal closure of  H in  N (long procedure)
\item Find a presentation of  H 
\item Is  H central in  N ? 
\item Is  H normal in  N ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the canonical decomposition of w 
\item Compute the centralizer of w 
\item Compute the inverse of w in freely reduced form 
\item Compute the maximal root of w 
\item Cyclically reduce w 
\item Find in which term of the lower central series w lies 
\item Freely reduce w 
\item Is w central in  N ? 
\item Is w an element of the commutator subgroup of  N 
\item Is w a proper power ? 
\item Is w trivial in  N ? 
\end{list}
\subsubsection{Algorithms involving words and subgroups}
\begin{list}{}
\item Decompose w in terms of a basis of  H 
\item Determine whether w lies in  H 
\end{list}
\subsubsection{Algorithms involving maps}
\begin{list}{}
\item Does m extend to a homomorphism ? 
\item Find the inverse of  h 
\item Is  h an IA-automorphism ? 
\item Is  h an automorphism ? 
\item Is  h an epimorphism ? 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Compute the product w1 * w2
\item Compute the product w2 * w1 
\item Is w1 = w2 ? 
\end{list}
\subsubsection{Algorithms involving two subgroups}
\subsection{HNN extensions}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute the canonical decomposition of  G abelianized 
\item Compute an integral homology group of  G 
\item Find a finite rewriting system for  G 
\item Find a ShortLex automatic structure for  G 
\item Is  G abelian ? 
\item Is  G free ? 
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Is  H abelian ? 
\item Is  H trivial ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the cyclic normal form of w 
\item Compute the inverse of w in freely reduced form 
\item Compute the maximal root of w in  G 
\item Compute the normal form of w 
\item Compute the reduced form of w 
\item Cyclically reduce w 
\item Find the i-th initial segment of the freely reduced form of w 
\item Find the i-th terminal segment of the freely reduced form of w 
\item Freely reduce w 
\item Is w a proper power in  G ? 
\item Is w trivial in  G ? 
\end{list}
\subsubsection{Algorithms involving maps}
\begin{list}{}
\item Extend m to a homomorphism 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Are w2 and w1 conjugate in  F ? 
\item Compute the product w2 * w1
\item Compute the product w1 * w2 
\item Is w2 = w1 ? 
\item Is w1 a proper power of w2 ?
\item Is w2 a proper power of w1 ? 
\end{list}
\subsubsection{Make another object}
\begin{list}{}
\item Abelian Quotient of  G 
\item Another Presentation of  G 
\item Nilpotent Quotient of  G 
\item Quotient of  G 
\end{list}
\subsubsection{Algorithms involving homomorphisms}
\subsection{Nilpotent groups}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute the canonical decomposition of  G abelianized 
\item Compute a basis of  G 
\item Compute the class of  G 
\item Compute the lower central factors of  G 
\item Compute the order of  G 
\item Find a term of lower central series of  G 
\item Find a polycyclic presentation of  G 
\item Compute the Hirsch number of  G 
\item Is  G abelian ? 
\item Is  G finite ? 
\item Is  G free nilpotent ? 
\item Is  G trivial ? 
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Compute a basis for  H 
\item Compute the class of  H 
\item Compute the Hirsch length of  H 
\item Compute the index of  H in  G 
\item Find the normal closure of  H in  G 
\item Find a presentation of  H 
\item Is  H abelian ? 
\item Is  H central ? 
\item Is  H normal ? 
\item Is  H trivial ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the canonical decomposition of w 
\item Compute the inverse of w in freely reduced form 
\item Compute the order of w 
\item Cyclically reduce w 
\item Find in which term of the lower central series w lies 
\item Freely reduce w 
\item Is w central in  G ? 
\item Is w an element of the commutator subgroup of  G 
\item Is w trivial in  G ? 
\end{list}
\subsubsection{Algorithms involving words and subgroups}
\begin{list}{}
\item Decompose w in terms of a basis of  H 
\item Determine whether w lies in  H 
\end{list}
\subsubsection{Algorithms involving maps}
\begin{list}{}
\item Does m extend to a homomorphism ? 
\item Is  h an IA-automorphism ? 
\item Is  h an automorphism ? 
\item Is  h an epimorphism ? 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Compute the product w1 * w2
\item Compute the product w2 * w1 
\item Is w1 = w2 ? 
\end{list}
\subsubsection{Algorithms involving two subgroups}
\begin{list}{}
\item Compute the join of  H1 and  H2 
\item Does  H1 contain  H2 ? 
\item Is   H1 =  H2 ? 
\end{list}
\subsection{One relator groups}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute the canonical decomposition of  G abelianized 
\item Compute the integral homology of  G 
\item Enumerate all the consequences of the defining relator of G 
\item Find a finite rewriting system for  G 
\item Find an HNN presentation of  G 
\item Find a ShortLex automatic structure for  G 
\item Is  G abelian ? 
\item Is  G free ? 
\item Is  G metric small cancellation ? 
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Compute a presentation for  H in  G 
\item Enumerate relators for  H 
\item Is  H a Magnus subgroup ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the inverse of w in freely reduced form 
\item Cyclically reduce w 
\item Find the i-th initial segment of the freely reduced form of w 
\item Find the i-th terminal segment of the freely reduced form of w 
\item Freely reduce w 
\item Is w trivial in  G ? 
\end{list}
\subsubsection{Algorithms involving words and subgroups}
\begin{list}{}
\item Does w represent an element of a Magnus subgroup  H ? 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Compute the product w1 * w2
\item Compute the product w2 * w1 
\item Are w1 and w2 conjugate in  G ? 
\end{list}
\subsection{Small cancellation groups}
\subsubsection{Algorithms involving the whole group}
\begin{list}{}
\item Compute the canonical decomposition of  G abelianized 
\item Compute an integral homology group of  G 
\item Compute the order of  G 
\item Find a finite rewriting system for  G 
\item Find a ShortLex automatic structure for  G 
\item Is  G abelian ? 
\item Is  G finite ? 
\item Is  G trivial ? 
\end{list}
\subsubsection{Algorithms involving a subgroup}
\begin{list}{}
\item Compute a presentation for  H 
\item Enumerate relators for  H 
\item Is  H abelian ? 
\item Is  H trivial ? 
\end{list}
\subsubsection{Algorithms involving a word}
\begin{list}{}
\item Compute the inverse of w in freely reduced form 
\item Cyclically reduce w 
\item Find the i-th initial segment of the freely reduced form of w 
\item Find the i-th terminal segment of the freely reduced form of w 
\item Freely reduce w 
\item Is w trivial in  G ? 
\end{list}
\subsubsection{Algorithms involving two elements}
\begin{list}{}
\item Compute the product w1 * w2
\item Compute the product w2 * w1 
\item Are w1 and w2 conjugate in  G ? 
\end{list}
\section{magnus.h}
This class replaces the use of the preprocessor symbol MAGNUS_HOME.
Main may reset the encapsulated char* when the Magnus root pathname
is specified on the command line.
\subsection{include}
<<include.h>>=
#include "config.h"
#include "Chars.h"

@
<<include.c>>=
#include "config.h"
#if defined(LINUX)
# include <termios.h>
# include <sys/ioctl.h>
#else
# include <sys/filio.h>
#endif
#include <iostream.h>
#include <errno.h>
#include "magnus.h"
#include "SessionManager.h"
//@db temporary hack to compile class templates
//#include "Polynomial.h"
//#include "Matrix.h"

@
\subsection{struct MagnusHome}
<<struct MagnusHome>>=
struct MagnusHome
{
  friend int main(int argc, char* argv[]);
  static Chars magnusHome( ) { return Chars( magnus_home ); }

private:
  static char* magnus_home;
};

@
\subsection{struct MagnusTmp}
<<struct MagnusTmp>>=
struct MagnusTmp
{
  friend int main(int argc, char* argv[]);
  static Chars magnusTmp( ) { return Chars( magnus_tmp ); }

private:
  static char* magnus_tmp;
};

@
<<magnus.h>>=
// src/magnus.pamphlet
#ifndef _MAGNUSHOME_H_
#define _MAGNUSHOME_H_

<<include.h>>
<<struct MagnusHome>>
<<struct MagnusTmp>>
#endif
@
\section{magnus}
\subsection{main}
We expect to be called with two arguments, the path to where magnus lives 
and the path to a temporary working directory.

Next we make sure that stdin is non-blocking so we can continue to run
if standard input is waiting.

Then we start the session manager which never returns.
<<main>>=
int main(int argc, char* argv[])
{
  if ( argc > 1 )
	 MagnusHome::magnus_home = argv[1];
  else
	 cerr << "\nNo root path supplied on the command line; using\n"
			<< MagnusHome::magnus_home << endl << endl << flush;
  if ( argc > 1 ){
	 MagnusTmp::magnus_tmp = argv[2];      
  }
  else
	 cerr << "\nNo tmp directory supplied on the command line; using\n"
			<< MagnusTmp::magnus_tmp << endl << endl << flush;
  int temp = 1;
  ioctl(0, FIONBIO, &temp);  // Make stdin non-blocking.
#if defined(SYSV)
  struct sigaction sa;
  sigaction(SIGCHLD, 0, &sa);
  sa.sa_flags |= SA_NOCLDWAIT;
  sigaction(SIGCHLD, &sa, 0);
#endif
#if defined(LINUX)
  signal(SIGCHLD, SIG_IGN);
#endif
  SessionManager::start();
}

@
\section{license}
Copyright (C) 1995 The New York Group Theory Cooperative
See magnus/doc/COPYRIGHT for the full notice.
<<*>>=
// src/magnus.pamphlet
<<include.c>>

#ifdef BSD
  extern "C" int ioctl(int, int, void*);
#elif defined(SYSV)
  extern "C" int ioctl(int, int, ...);
#endif

<<main>>
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

