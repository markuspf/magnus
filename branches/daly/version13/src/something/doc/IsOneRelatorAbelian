From alexei@rio Mon Dec 23 16:43 EST 1996
From: alexei@rio (Alexei Myasnikov)
Subject: I relotor abelian
To: bormotov@rio (Dmitry Bormotov)
Date: Mon, 23 Dec 1996 16:37:11 -0500 (EST)
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hi, J&D,

here are some tasks to program:

1 relator groups

1. For a  given one relator group G determine wehther G is abelian.

Algorithm:

if number of generators > 2 , then G is not abelian.
if number of generators is 1, then G is abelian.
if number of generators = 2, then G is abelian if and only if one of the 
following is true:
1) G = <a,b| r> and r is a primitive element in the free group on a,b.
2) G = <a,b| r> and the cyclically reduced form of r has one of the 
following 8 forms: [a,b], [b,a] and all their cyclic permutations.

2. For a given one relator group G = <a1,   an| r> determine whether G is a nontrivial
free product. And if G is a free product find the corresponding presentation 
of G as a free product.

Algorithm:

We will use the following fact: if G = A*B and this free product is nontrivial
(i.e. both A and B are nontrivial), then either A or B is a free group.

There is an old result of Shenitzer (Proc.Amer. Math. Soc.6, 1955, p.273-279) 
that says:
G can be represented as a free product of a nontrivial group and an 
infinite cyclic group if and only if there exists a minimal form of the relator 
r (minimal up to all Whitehead automorphisms) which contains less then n generators.

So you need to write down all minimal forms and check whether one of them 
contains less then n generators. In this case, you can write the group as a 
free product of the one relator group (where the new relation r1 is those minimal 
form of r) and the infinite cyclic group generated by the relator not in 
the minimal form. After that you can repeat the procedure to the one relator 
factor and so on. Finally you will get a free decomposition into a free product 
of one relator and a free group.

3. Let we have a word r in the generators a1, ..., an.  Determine whether r is a 
product of two powers u^n and v^m for some words u and v in the free group
F(a1,.., an), such that u and v do not commute in F.

Algorithm: think about it yourself ( we know that some algorithm exists, but 
we do not know whether there exists   a fast algorithm (we did not think about 
it)). 






