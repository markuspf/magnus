\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{src/backend/general/include/Int2.h}
\author{Dmitry Bormotov}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{Int2.h}
\section{include}
<<include>>=
#include "global.h"

@
\section{struct Int2}
<<struct Int2>>=
struct Int2 {
  Int2( ) : v(0) { }
  Int2( int x ) : v(x) { }
  int compare( Int2 x ) const {
    if( this->v < x.v ) return -1;
    else if( this->v > x.v ) return 1;
    else return 0;
  }

  friend ostream& operator << ( ostream& ostr, const Int2& i )
  {
    ostr << i.v;
    return ostr;
  }

  bool operator == ( const Int2& i ) const { return v == i.v; }
  bool operator != ( const Int2& i ) const { return !(*this == i); }
  Int2 operator - ( ) const { return -v; }
  Int2 operator + ( const Int2& i ) const { return v + i.v; }
  Int2& operator += ( const Int2& i ) { v += i.v; return *this; }
  Int2 operator * ( const Int2& i ) const { return v * i.v; }
  Int2& operator *= ( const Int2& i ) { v *= i.v; return *this; }
  bool operator < ( const Int2& i ) const { return v < i.v; }
  bool operator > ( const Int2& i ) const { return v > i.v; }
  int value( ) const { return v; }

private:
  int v;
};

@
\section{license}
<<license>>=
// Copyright (C) 1994-2004 The New York Group Theory Cooperative
// See license/NYGTC for the full notice
@
<<*>>=
// src/backend/general/include/Int2.h
#ifndef _Int2_H_
#define _Int2_H_

<<license>>
<<include>>
<<struct Int2>>
#endif
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
