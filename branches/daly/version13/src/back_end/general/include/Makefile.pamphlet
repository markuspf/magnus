\documentclass{article}
\usepackage{../../../../mnt/linux/bin/axiom}
\begin{document}
\title{src/backend/general/include/Makefile}
\author{The Magnus Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{Environment}
<<environment>>=
IN=${SRC}/backend/general/include
OUT=${INT}/include
DOC=${MNT}/${SYS}/doc/src/backend/general/include

@
\section{Code}
\section{AbelianWord}
<<AbelianWord.h (OUT from IN)>>=
${OUT}/AbelianWord.h: ${IN}/AbelianWord.h.pamphlet
	@echo 1 making ${OUT}/AbelianWord.h from ${IN}/AbelianWord.h.pamphlet
	@${DOCUMENT} src AbelianWord.h ${OUT}

@
<<AbelianWord.h.dvi (DOC from IN)>>=
${DOC}/AbelianWord.h.dvi: ${IN}/AbelianWord.h.pamphlet ${DOC}/axiom.sty
	@echo 2 making ${DOC}/AbelianWord.h.dvi from ${IN}/AbelianWord.h.pamphlet 
	@${DOCUMENT} dvi AbelianWord.h ${DOC} AbelianWord.h ${NOISE}

@
\section{AdaptSimpson}
<<AdaptSimpson.h (OUT from IN)>>=
${OUT}/AdaptSimpson.h: ${IN}/AdaptSimpson.h.pamphlet
	@echo 3 making ${OUT}/AdaptSimpson.h from ${IN}/AdaptSimpson.h.pamphlet
	@${DOCUMENT} src AdaptSimpson.h ${OUT}

@
<<AdaptSimpson.h.dvi (DOC from IN)>>=
${DOC}/AdaptSimpson.h.dvi: ${IN}/AdaptSimpson.h.pamphlet ${DOC}/axiom.sty
	@echo 4 making ${DOC}/AdaptSimpson.h.dvi from ${IN}/AdaptSimpson.h.pamphlet 
	@${DOCUMENT} dvi AdaptSimpson.h ${DOC} AdaptSimpson.h ${NOISE}

@
\section{Associations}
<<Associations.h (OUT from IN)>>=
${OUT}/Associations.h: ${IN}/Associations.h.pamphlet
	@echo 5 making ${OUT}/Associations.h from ${IN}/Associations.h.pamphlet
	@${DOCUMENT} src Associations.h ${OUT}

@
<<Associations.h.dvi (DOC from IN)>>=
${DOC}/Associations.h.dvi: ${IN}/Associations.h.pamphlet ${DOC}/axiom.sty
	@echo 6 making ${DOC}/Associations.h.dvi from ${IN}/Associations.h.pamphlet 
	@${DOCUMENT} dvi Associations.h ${DOC} Associations.h ${NOISE}

@
\section{BlackBox}
<<BlackBox.h (OUT from IN)>>=
${OUT}/BlackBox.h: ${IN}/BlackBox.h.pamphlet
	@echo 7 making ${OUT}/BlackBox.h from ${IN}/BlackBox.h.pamphlet
	@${DOCUMENT} src BlackBox.h ${OUT}

@
<<BlackBox.h.dvi (DOC from IN)>>=
${DOC}/BlackBox.h.dvi: ${IN}/BlackBox.h.pamphlet ${DOC}/axiom.sty
	@echo 8 making ${DOC}/BlackBox.h.dvi from ${IN}/BlackBox.h.pamphlet 
	@${DOCUMENT} dvi BlackBox.h ${DOC} BlackBox.h ${NOISE}

@
\section{BTree}
<<BTree.h (OUT from IN)>>=
${OUT}/BTree.h: ${IN}/BTree.h.pamphlet
	@echo 9 making ${OUT}/BTree.h from ${IN}/BTree.h.pamphlet
	@${DOCUMENT} src BTree.h ${OUT}

@
<<BTree.h.dvi (DOC from IN)>>=
${DOC}/BTree.h.dvi: ${IN}/BTree.h.pamphlet ${DOC}/axiom.sty
	@echo 10 making ${DOC}/BTree.h.dvi from ${IN}/BTree.h.pamphlet 
	@${DOCUMENT} dvi BTree.h ${DOC} BTree.h ${NOISE}

@
\section{Cell}
<<Cell.h (OUT from IN)>>=
${OUT}/Cell.h: ${IN}/Cell.h.pamphlet
	@echo 11 making ${OUT}/Cell.h from ${IN}/Cell.h.pamphlet
	@${DOCUMENT} src Cell.h ${OUT}

@
<<Cell.h.dvi (DOC from IN)>>=
${DOC}/Cell.h.dvi: ${IN}/Cell.h.pamphlet ${DOC}/axiom.sty
	@echo 12 making ${DOC}/Cell.h.dvi from ${IN}/Cell.h.pamphlet 
	@${DOCUMENT} dvi Cell.h ${DOC} Cell.h ${NOISE}

@
\section{Chars}
<<Chars.h (OUT from IN)>>=
${OUT}/Chars.h: ${IN}/Chars.h.pamphlet
	@echo 13 making ${OUT}/Chars.h from ${IN}/Chars.h.pamphlet
	@${DOCUMENT} src Chars.h ${OUT}

@
<<Chars.h.dvi (DOC from IN)>>=
${DOC}/Chars.h.dvi: ${IN}/Chars.h.pamphlet ${DOC}/axiom.sty
	@echo 14 making ${DOC}/Chars.h.dvi from ${IN}/Chars.h.pamphlet 
	@${DOCUMENT} dvi Chars.h ${DOC} Chars.h ${NOISE}

@
\section{conversions}
<<conversions.h (OUT from IN)>>=
${OUT}/conversions.h: ${IN}/conversions.h.pamphlet
	@echo 15 making ${OUT}/conversions.h from ${IN}/conversions.h.pamphlet
	@${DOCUMENT} src conversions.h ${OUT}

@
<<conversions.h.dvi (DOC from IN)>>=
${DOC}/conversions.h.dvi: ${IN}/conversions.h.pamphlet ${DOC}/axiom.sty
	@echo 16 making ${DOC}/conversions.h.dvi from ${IN}/conversions.h.pamphlet 
	@${DOCUMENT} dvi conversions.h ${DOC} conversions.h ${NOISE}

@
\section{coordsys}
<<coordsys.h (OUT from IN)>>=
${OUT}/coordsys.h: ${IN}/coordsys.h.pamphlet
	@echo 17 making ${OUT}/coordsys.h from ${IN}/coordsys.h.pamphlet
	@${DOCUMENT} src coordsys.h ${OUT}

@
<<coordsys.h.dvi (DOC from IN)>>=
${DOC}/coordsys.h.dvi: ${IN}/coordsys.h.pamphlet ${DOC}/axiom.sty
	@echo 18 making ${DOC}/coordsys.h.dvi from ${IN}/coordsys.h.pamphlet 
	@${DOCUMENT} dvi coordsys.h ${DOC} coordsys.h ${NOISE}

@
\section{cwmtx}
<<cwmtx.h (OUT from IN)>>=
${OUT}/cwmtx.h: ${IN}/cwmtx.h.pamphlet
	@echo 19 making ${OUT}/cwmtx.h from ${IN}/cwmtx.h.pamphlet
	@${DOCUMENT} src cwmtx.h ${OUT}

@
<<cwmtx.h.dvi (DOC from IN)>>=
${DOC}/cwmtx.h.dvi: ${IN}/cwmtx.h.pamphlet ${DOC}/axiom.sty
	@echo 20 making ${DOC}/cwmtx.h.dvi from ${IN}/cwmtx.h.pamphlet 
	@${DOCUMENT} dvi cwmtx.h ${DOC} cwmtx.h ${NOISE}

@
\section{DArray}
<<DArray.h (OUT from IN)>>=
${OUT}/DArray.h: ${IN}/DArray.h.pamphlet
	@echo 21 making ${OUT}/DArray.h from ${IN}/DArray.h.pamphlet
	@${DOCUMENT} src DArray.h ${OUT}

@
<<DArray.h.dvi (DOC from IN)>>=
${DOC}/DArray.h.dvi: ${IN}/DArray.h.pamphlet ${DOC}/axiom.sty
	@echo 22 making ${DOC}/DArray.h.dvi from ${IN}/DArray.h.pamphlet 
	@${DOCUMENT} dvi DArray.h ${DOC} DArray.h ${NOISE}

@
\section{DCell}
<<DCell.h (OUT from IN)>>=
${OUT}/DCell.h: ${IN}/DCell.h.pamphlet
	@echo 23 making ${OUT}/DCell.h from ${IN}/DCell.h.pamphlet
	@${DOCUMENT} src DCell.h ${OUT}

@
<<DCell.h.dvi (DOC from IN)>>=
${DOC}/DCell.h.dvi: ${IN}/DCell.h.pamphlet ${DOC}/axiom.sty
	@echo 24 making ${DOC}/DCell.h.dvi from ${IN}/DCell.h.pamphlet 
	@${DOCUMENT} dvi DCell.h ${DOC} DCell.h ${NOISE}

@
\section{DList}
<<DList.h (OUT from IN)>>=
${OUT}/DList.h: ${IN}/DList.h.pamphlet
	@echo 25 making ${OUT}/DList.h from ${IN}/DList.h.pamphlet
	@${DOCUMENT} src DList.h ${OUT}

@
<<DList.h.dvi (DOC from IN)>>=
${DOC}/DList.h.dvi: ${IN}/DList.h.pamphlet ${DOC}/axiom.sty
	@echo 26 making ${DOC}/DList.h.dvi from ${IN}/DList.h.pamphlet 
	@${DOCUMENT} dvi DList.h ${DOC} DList.h ${NOISE}

@
\section{Elt}
<<Elt.h (OUT from IN)>>=
${OUT}/Elt.h: ${IN}/Elt.h.pamphlet
	@echo 27 making ${OUT}/Elt.h from ${IN}/Elt.h.pamphlet
	@${DOCUMENT} src Elt.h ${OUT}

@
<<Elt.h.dvi (DOC from IN)>>=
${DOC}/Elt.h.dvi: ${IN}/Elt.h.pamphlet ${DOC}/axiom.sty
	@echo 28 making ${DOC}/Elt.h.dvi from ${IN}/Elt.h.pamphlet 
	@${DOCUMENT} dvi Elt.h ${DOC} Elt.h ${NOISE}

@
\section{EltRep}
<<EltRep.h (OUT from IN)>>=
${OUT}/EltRep.h: ${IN}/EltRep.h.pamphlet
	@echo 29 making ${OUT}/EltRep.h from ${IN}/EltRep.h.pamphlet
	@${DOCUMENT} src EltRep.h ${OUT}

@
<<EltRep.h.dvi (DOC from IN)>>=
${DOC}/EltRep.h.dvi: ${IN}/EltRep.h.pamphlet ${DOC}/axiom.sty
	@echo 30 making ${DOC}/EltRep.h.dvi from ${IN}/EltRep.h.pamphlet 
	@${DOCUMENT} dvi EltRep.h ${DOC} EltRep.h ${NOISE}

@
\section{File}
<<File.h (OUT from IN)>>=
${OUT}/File.h: ${IN}/File.h.pamphlet
	@echo 31 making ${OUT}/File.h from ${IN}/File.h.pamphlet
	@${DOCUMENT} src File.h ${OUT}

@
<<File.h.dvi (DOC from IN)>>=
${DOC}/File.h.dvi: ${IN}/File.h.pamphlet ${DOC}/axiom.sty
	@echo 32 making ${DOC}/File.h.dvi from ${IN}/File.h.pamphlet 
	@${DOCUMENT} dvi File.h ${DOC} File.h ${NOISE}

@
\section{GCD}
<<GCD.h (OUT from IN)>>=
${OUT}/GCD.h: ${IN}/GCD.h.pamphlet
	@echo 33 making ${OUT}/GCD.h from ${IN}/GCD.h.pamphlet
	@${DOCUMENT} src GCD.h ${OUT}

@
<<GCD.h.dvi (DOC from IN)>>=
${DOC}/GCD.h.dvi: ${IN}/GCD.h.pamphlet ${DOC}/axiom.sty
	@echo 34 making ${DOC}/GCD.h.dvi from ${IN}/GCD.h.pamphlet 
	@${DOCUMENT} dvi GCD.h ${DOC} GCD.h ${NOISE}

@
\section{Generator}
<<Generator.h (OUT from IN)>>=
${OUT}/Generator.h: ${IN}/Generator.h.pamphlet
	@echo 35 making ${OUT}/Generator.h from ${IN}/Generator.h.pamphlet
	@${DOCUMENT} src Generator.h ${OUT}

@
<<Generator.h.dvi (DOC from IN)>>=
${DOC}/Generator.h.dvi: ${IN}/Generator.h.pamphlet ${DOC}/axiom.sty
	@echo 36 making ${DOC}/Generator.h.dvi from ${IN}/Generator.h.pamphlet 
	@${DOCUMENT} dvi Generator.h ${DOC} Generator.h ${NOISE}

@
\section{Int2}
<<Int2.h (OUT from IN)>>=
${OUT}/Int2.h: ${IN}/Int2.h.pamphlet
	@echo 37 making ${OUT}/Int2.h from ${IN}/Int2.h.pamphlet
	@${DOCUMENT} src Int2.h ${OUT}

@
<<Int2.h.dvi (DOC from IN)>>=
${DOC}/Int2.h.dvi: ${IN}/Int2.h.pamphlet ${DOC}/axiom.sty
	@echo 38 making ${DOC}/Int2.h.dvi from ${IN}/Int2.h.pamphlet 
	@${DOCUMENT} dvi Int2.h ${DOC} Int2.h ${NOISE}

@
\section{IStreamPoll}
<<IStreamPoll.h (OUT from IN)>>=
${OUT}/IStreamPoll.h: ${IN}/IStreamPoll.h.pamphlet
	@echo 39 making ${OUT}/IStreamPoll.h from ${IN}/IStreamPoll.h.pamphlet
	@${DOCUMENT} src IStreamPoll.h ${OUT}

@
<<IStreamPoll.h.dvi (DOC from IN)>>=
${DOC}/IStreamPoll.h.dvi: ${IN}/IStreamPoll.h.pamphlet ${DOC}/axiom.sty
	@echo 40 making ${DOC}/IStreamPoll.h.dvi from ${IN}/IStreamPoll.h.pamphlet 
	@${DOCUMENT} dvi IStreamPoll.h ${DOC} IStreamPoll.h ${NOISE}

@
\section{KripkeStructure}
<<KripkeStructure.h (OUT from IN)>>=
${OUT}/KripkeStructure.h: ${IN}/KripkeStructure.h.pamphlet
	@echo 41 making ${OUT}/KripkeStructure.h from ${IN}/KripkeStructure.h.pamphlet
	@${DOCUMENT} src KripkeStructure.h ${OUT}

@
<<KripkeStructure.h.dvi (DOC from IN)>>=
${DOC}/KripkeStructure.h.dvi: ${IN}/KripkeStructure.h.pamphlet ${DOC}/axiom.sty
	@echo 42 making ${DOC}/KripkeStructure.h.dvi from ${IN}/KripkeStructure.h.pamphlet 
	@${DOCUMENT} dvi KripkeStructure.h ${DOC} KripkeStructure.h ${NOISE}

@
\section{KState}
<<KState.h (OUT from IN)>>=
${OUT}/KState.h: ${IN}/KState.h.pamphlet
	@echo 43 making ${OUT}/KState.h from ${IN}/KState.h.pamphlet
	@${DOCUMENT} src KState.h ${OUT}

@
<<KState.h.dvi (DOC from IN)>>=
${DOC}/KState.h.dvi: ${IN}/KState.h.pamphlet ${DOC}/axiom.sty
	@echo 44 making ${DOC}/KState.h.dvi from ${IN}/KState.h.pamphlet 
	@${DOCUMENT} dvi KState.h ${DOC} KState.h ${NOISE}

@
\section{LargeNumber}
<<LargeNumber.h (OUT from IN)>>=
${OUT}/LargeNumber.h: ${IN}/LargeNumber.h.pamphlet
	@echo 45 making ${OUT}/LargeNumber.h from ${IN}/LargeNumber.h.pamphlet
	@${DOCUMENT} src LargeNumber.h ${OUT}

@
<<LargeNumber.h.dvi (DOC from IN)>>=
${DOC}/LargeNumber.h.dvi: ${IN}/LargeNumber.h.pamphlet ${DOC}/axiom.sty
	@echo 46 making ${DOC}/LargeNumber.h.dvi from ${IN}/LargeNumber.h.pamphlet 
	@${DOCUMENT} dvi LargeNumber.h ${DOC} LargeNumber.h ${NOISE}

@
\section{List}
<<List.h (OUT from IN)>>=
${OUT}/List.h: ${IN}/List.h.pamphlet
	@echo 47 making ${OUT}/List.h from ${IN}/List.h.pamphlet
	@${DOCUMENT} src List.h ${OUT}

@
<<List.h.dvi (DOC from IN)>>=
${DOC}/List.h.dvi: ${IN}/List.h.pamphlet ${DOC}/axiom.sty
	@echo 48 making ${DOC}/List.h.dvi from ${IN}/List.h.pamphlet 
	@${DOCUMENT} dvi List.h ${DOC} List.h ${NOISE}

@
\section{LogWatcher}
<<LogWatcher.h (OUT from IN)>>=
${OUT}/LogWatcher.h: ${IN}/LogWatcher.h.pamphlet
	@echo 49 making ${OUT}/LogWatcher.h from ${IN}/LogWatcher.h.pamphlet
	@${DOCUMENT} src LogWatcher.h ${OUT}

@
<<LogWatcher.h.dvi (DOC from IN)>>=
${DOC}/LogWatcher.h.dvi: ${IN}/LogWatcher.h.pamphlet ${DOC}/axiom.sty
	@echo 50 making ${DOC}/LogWatcher.h.dvi from ${IN}/LogWatcher.h.pamphlet 
	@${DOCUMENT} dvi LogWatcher.h ${DOC} LogWatcher.h ${NOISE}

@
\section{MagnusHome}
<<MagnusHome.h (OUT from IN)>>=
${OUT}/MagnusHome.h: ${IN}/MagnusHome.h.pamphlet
	@echo 51 making ${OUT}/MagnusHome.h from ${IN}/MagnusHome.h.pamphlet
	@${DOCUMENT} src MagnusHome.h ${OUT}

@
<<MagnusHome.h.dvi (DOC from IN)>>=
${DOC}/MagnusHome.h.dvi: ${IN}/MagnusHome.h.pamphlet ${DOC}/axiom.sty
	@echo 52 making ${DOC}/MagnusHome.h.dvi from ${IN}/MagnusHome.h.pamphlet 
	@${DOCUMENT} dvi MagnusHome.h ${DOC} MagnusHome.h ${NOISE}

@
\section{matrix}
<<matrix.h (OUT from IN)>>=
${OUT}/matrix.h: ${IN}/matrix.h.pamphlet
	@echo 53 making ${OUT}/matrix.h from ${IN}/matrix.h.pamphlet
	@${DOCUMENT} src matrix.h ${OUT}

@
<<matrix.h.dvi (DOC from IN)>>=
${DOC}/matrix.h.dvi: ${IN}/matrix.h.pamphlet ${DOC}/axiom.sty
	@echo 54 making ${DOC}/matrix.h.dvi from ${IN}/matrix.h.pamphlet 
	@${DOCUMENT} dvi matrix.h ${DOC} matrix.h ${NOISE}

@
\section{Pair}
<<Pair.h (OUT from IN)>>=
${OUT}/Pair.h: ${IN}/Pair.h.pamphlet
	@echo 55 making ${OUT}/Pair.h from ${IN}/Pair.h.pamphlet
	@${DOCUMENT} src Pair.h ${OUT}

@
<<Pair.h.dvi (DOC from IN)>>=
${DOC}/Pair.h.dvi: ${IN}/Pair.h.pamphlet ${DOC}/axiom.sty
	@echo 56 making ${DOC}/Pair.h.dvi from ${IN}/Pair.h.pamphlet 
	@${DOCUMENT} dvi Pair.h ${DOC} Pair.h ${NOISE}

@
\section{Proba}
<<Proba.h (OUT from IN)>>=
${OUT}/Proba.h: ${IN}/Proba.h.pamphlet
	@echo 57 making ${OUT}/Proba.h from ${IN}/Proba.h.pamphlet
	@${DOCUMENT} src Proba.h ${OUT}

@
<<Proba.h.dvi (DOC from IN)>>=
${DOC}/Proba.h.dvi: ${IN}/Proba.h.pamphlet ${DOC}/axiom.sty
	@echo 58 making ${DOC}/Proba.h.dvi from ${IN}/Proba.h.pamphlet 
	@${DOCUMENT} dvi Proba.h ${DOC} Proba.h ${NOISE}

@
\section{quatern}
<<quatern.h (OUT from IN)>>=
${OUT}/quatern.h: ${IN}/quatern.h.pamphlet
	@echo 59 making ${OUT}/quatern.h from ${IN}/quatern.h.pamphlet
	@${DOCUMENT} src quatern.h ${OUT}

@
<<quatern.h.dvi (DOC from IN)>>=
${DOC}/quatern.h.dvi: ${IN}/quatern.h.pamphlet ${DOC}/axiom.sty
	@echo 60 making ${DOC}/quatern.h.dvi from ${IN}/quatern.h.pamphlet 
	@${DOCUMENT} dvi quatern.h ${DOC} quatern.h ${NOISE}

@
\section{QuickAssociations}
<<QuickAssociations.h (OUT from IN)>>=
${OUT}/QuickAssociations.h: ${IN}/QuickAssociations.h.pamphlet
	@echo 61 making ${OUT}/QuickAssociations.h from ${IN}/QuickAssociations.h.pamphlet
	@${DOCUMENT} src QuickAssociations.h ${OUT}

@
<<QuickAssociations.h.dvi (DOC from IN)>>=
${DOC}/QuickAssociations.h.dvi: ${IN}/QuickAssociations.h.pamphlet ${DOC}/axiom.sty
	@echo 62 making ${DOC}/QuickAssociations.h.dvi from ${IN}/QuickAssociations.h.pamphlet 
	@${DOCUMENT} dvi QuickAssociations.h ${DOC} QuickAssociations.h ${NOISE}

@
\section{RandomNumbers}
<<RandomNumbers.h (OUT from IN)>>=
${OUT}/RandomNumbers.h: ${IN}/RandomNumbers.h.pamphlet
	@echo 65 making ${OUT}/RandomNumbers.h from ${IN}/RandomNumbers.h.pamphlet
	@${DOCUMENT} src RandomNumbers.h ${OUT}

@
<<RandomNumbers.h.dvi (DOC from IN)>>=
${DOC}/RandomNumbers.h.dvi: ${IN}/RandomNumbers.h.pamphlet ${DOC}/axiom.sty
	@echo 66 making ${DOC}/RandomNumbers.h.dvi from ${IN}/RandomNumbers.h.pamphlet 
	@${DOCUMENT} dvi RandomNumbers.h ${DOC} RandomNumbers.h ${NOISE}

@
\section{Regex}
<<Regex.h (OUT from IN)>>=
${OUT}/Regex.h: ${IN}/Regex.h.pamphlet
	@echo 67 making ${OUT}/Regex.h from ${IN}/Regex.h.pamphlet
	@${DOCUMENT} src Regex.h ${OUT}

@
<<Regex.h.dvi (DOC from IN)>>=
${DOC}/Regex.h.dvi: ${IN}/Regex.h.pamphlet ${DOC}/axiom.sty
	@echo 68 making ${DOC}/Regex.h.dvi from ${IN}/Regex.h.pamphlet 
	@${DOCUMENT} dvi Regex.h ${DOC} Regex.h ${NOISE}

@
\section{ServerSocket}
<<ServerSocket.h (OUT from IN)>>=
${OUT}/ServerSocket.h: ${IN}/ServerSocket.h.pamphlet
	@echo 69 making ${OUT}/ServerSocket.h from ${IN}/ServerSocket.h.pamphlet
	@${DOCUMENT} src ServerSocket.h ${OUT}

@
<<ServerSocket.h.dvi (DOC from IN)>>=
${DOC}/ServerSocket.h.dvi: ${IN}/ServerSocket.h.pamphlet ${DOC}/axiom.sty
	@echo 70 making ${DOC}/ServerSocket.h.dvi from ${IN}/ServerSocket.h.pamphlet 
	@${DOCUMENT} dvi ServerSocket.h ${DOC} ServerSocket.h ${NOISE}

@
\section{Set}
<<Set.h (OUT from IN)>>=
${OUT}/Set.h: ${IN}/Set.h.pamphlet
	@echo 71 making ${OUT}/Set.h from ${IN}/Set.h.pamphlet
	@${DOCUMENT} src Set.h ${OUT}

@
<<Set.h.dvi (DOC from IN)>>=
${DOC}/Set.h.dvi: ${IN}/Set.h.pamphlet ${DOC}/axiom.sty
	@echo 72 making ${DOC}/Set.h.dvi from ${IN}/Set.h.pamphlet 
	@${DOCUMENT} dvi Set.h ${DOC} Set.h ${NOISE}

@
\section{smatrix}
<<smatrix.h (OUT from IN)>>=
${OUT}/smatrix.h: ${IN}/smatrix.h.pamphlet
	@echo 73 making ${OUT}/smatrix.h from ${IN}/smatrix.h.pamphlet
	@${DOCUMENT} src smatrix.h ${OUT}

@
<<smatrix.h.dvi (DOC from IN)>>=
${DOC}/smatrix.h.dvi: ${IN}/smatrix.h.pamphlet ${DOC}/axiom.sty
	@echo 74 making ${DOC}/smatrix.h.dvi from ${IN}/smatrix.h.pamphlet 
	@${DOCUMENT} dvi smatrix.h ${DOC} smatrix.h ${NOISE}

@
\section{Socket}
<<Socket.h (OUT from IN)>>=
${OUT}/Socket.h: ${IN}/Socket.h.pamphlet
	@echo 75 making ${OUT}/Socket.h from ${IN}/Socket.h.pamphlet
	@${DOCUMENT} src Socket.h ${OUT}

@
<<Socket.h.dvi (DOC from IN)>>=
${DOC}/Socket.h.dvi: ${IN}/Socket.h.pamphlet ${DOC}/axiom.sty
	@echo 76 making ${DOC}/Socket.h.dvi from ${IN}/Socket.h.pamphlet 
	@${DOCUMENT} dvi Socket.h ${DOC} Socket.h ${NOISE}

@
\section{SocketException}
<<SocketException.h (OUT from IN)>>=
${OUT}/SocketException.h: ${IN}/SocketException.h.pamphlet
	@echo 77 making ${OUT}/SocketException.h from ${IN}/SocketException.h.pamphlet
	@${DOCUMENT} src SocketException.h ${OUT}

@
<<SocketException.h.dvi (DOC from IN)>>=
${DOC}/SocketException.h.dvi: ${IN}/SocketException.h.pamphlet ${DOC}/axiom.sty
	@echo 78 making ${DOC}/SocketException.h.dvi from ${IN}/SocketException.h.pamphlet 
	@${DOCUMENT} dvi SocketException.h ${DOC} SocketException.h ${NOISE}

@
\section{Stack}
<<Stack.h (OUT from IN)>>=
${OUT}/Stack.h: ${IN}/Stack.h.pamphlet
	@echo 79 making ${OUT}/Stack.h from ${IN}/Stack.h.pamphlet
	@${DOCUMENT} src Stack.h ${OUT}

@
<<Stack.h.dvi (DOC from IN)>>=
${DOC}/Stack.h.dvi: ${IN}/Stack.h.pamphlet ${DOC}/axiom.sty
	@echo 80 making ${DOC}/Stack.h.dvi from ${IN}/Stack.h.pamphlet 
	@${DOCUMENT} dvi Stack.h ${DOC} Stack.h ${NOISE}

@
\section{String}
<<String.h (OUT from IN)>>=
${OUT}/String.h: ${IN}/String.h.pamphlet
	@echo 81 making ${OUT}/String.h from ${IN}/String.h.pamphlet
	@${DOCUMENT} src String.h ${OUT}

@
<<String.h.dvi (DOC from IN)>>=
${DOC}/String.h.dvi: ${IN}/String.h.pamphlet ${DOC}/axiom.sty
	@echo 82 making ${DOC}/String.h.dvi from ${IN}/String.h.pamphlet 
	@${DOCUMENT} dvi String.h ${DOC} String.h ${NOISE}

@
\section{svector}
<<svector.h (OUT from IN)>>=
${OUT}/svector.h: ${IN}/svector.h.pamphlet
	@echo 83 making ${OUT}/svector.h from ${IN}/svector.h.pamphlet
	@${DOCUMENT} src svector.h ${OUT}

@
<<svector.h.dvi (DOC from IN)>>=
${DOC}/svector.h.dvi: ${IN}/svector.h.pamphlet ${DOC}/axiom.sty
	@echo 84 making ${DOC}/svector.h.dvi from ${IN}/svector.h.pamphlet 
	@${DOCUMENT} dvi svector.h ${DOC} svector.h ${NOISE}

@
\section{Timer}
<<Timer.h (OUT from IN)>>=
${OUT}/Timer.h: ${IN}/Timer.h.pamphlet
	@echo 85 making ${OUT}/Timer.h from ${IN}/Timer.h.pamphlet
	@${DOCUMENT} src Timer.h ${OUT}

@
<<Timer.h.dvi (DOC from IN)>>=
${DOC}/Timer.h.dvi: ${IN}/Timer.h.pamphlet ${DOC}/axiom.sty
	@echo 86 making ${DOC}/Timer.h.dvi from ${IN}/Timer.h.pamphlet 
	@${DOCUMENT} dvi Timer.h ${DOC} Timer.h ${NOISE}

@
\section{Type}
<<Type.h (OUT from IN)>>=
${OUT}/Type.h: ${IN}/Type.h.pamphlet
	@echo 87 making ${OUT}/Type.h from ${IN}/Type.h.pamphlet
	@${DOCUMENT} src Type.h ${OUT}

@
<<Type.h.dvi (DOC from IN)>>=
${DOC}/Type.h.dvi: ${IN}/Type.h.pamphlet ${DOC}/axiom.sty
	@echo 88 making ${DOC}/Type.h.dvi from ${IN}/Type.h.pamphlet 
	@${DOCUMENT} dvi Type.h ${DOC} Type.h ${NOISE}

@
\section{vector1}
<<vector1.h (OUT from IN)>>=
${OUT}/vector1.h: ${IN}/vector1.h.pamphlet
	@echo 89 making ${OUT}/vector1.h from ${IN}/vector1.h.pamphlet
	@${DOCUMENT} src vector1.h ${OUT}

@
<<vector1.h.dvi (DOC from IN)>>=
${DOC}/vector1.h.dvi: ${IN}/vector1.h.pamphlet ${DOC}/axiom.sty
	@echo 90 making ${DOC}/vector1.h.dvi from ${IN}/vector1.h.pamphlet 
	@${DOCUMENT} dvi vector1.h ${DOC} vector1.h ${NOISE}

@
\section{Vector}
<<Vector.h (OUT from IN)>>=
${OUT}/Vector.h: ${IN}/Vector.h.pamphlet
	@echo 91 making ${OUT}/Vector.h from ${IN}/Vector.h.pamphlet
	@${DOCUMENT} src Vector.h ${OUT}

@
<<Vector.h.dvi (DOC from IN)>>=
${DOC}/Vector.h.dvi: ${IN}/Vector.h.pamphlet ${DOC}/axiom.sty
	@echo 92 making ${DOC}/Vector.h.dvi from ${IN}/Vector.h.pamphlet 
	@${DOCUMENT} dvi Vector.h ${DOC} Vector.h ${NOISE}

@
<<VectorPtr.h (OUT from IN)>>=
${OUT}/VectorPtr.h: ${IN}/VectorPtr.h.pamphlet
	@echo 93 making ${OUT}/VectorPtr.h from ${IN}/VectorPtr.h.pamphlet
	@${DOCUMENT} src VectorPtr.h ${OUT}

@
<<VectorPtr.h.dvi (DOC from IN)>>=
${DOC}/VectorPtr.h.dvi: ${IN}/VectorPtr.h.pamphlet ${DOC}/axiom.sty
	@echo 94 making ${DOC}/VectorPtr.h.dvi from ${IN}/VectorPtr.h.pamphlet 
	@${DOCUMENT} dvi VectorPtr.h ${DOC} VectorPtr.h ${NOISE}

@
<<WordData.h (OUT from IN)>>=
${OUT}/WordData.h: ${IN}/WordData.h.pamphlet
	@echo 95 making ${OUT}/WordData.h from ${IN}/WordData.h.pamphlet
	@${DOCUMENT} src WordData.h ${OUT}

@
<<WordData.h.dvi (DOC from IN)>>=
${DOC}/WordData.h.dvi: ${IN}/WordData.h.pamphlet ${DOC}/axiom.sty
	@echo 96 making ${DOC}/WordData.h.dvi from ${IN}/WordData.h.pamphlet 
	@${DOCUMENT} dvi WordData.h ${DOC} WordData.h ${NOISE}

@
<<Word.h (OUT from IN)>>=
${OUT}/Word.h: ${IN}/Word.h.pamphlet
	@echo 97 making ${OUT}/Word.h from ${IN}/Word.h.pamphlet
	@${DOCUMENT} src Word.h ${OUT}

@
<<Word.h.dvi (DOC from IN)>>=
${DOC}/Word.h.dvi: ${IN}/Word.h.pamphlet ${DOC}/axiom.sty
	@echo 98 making ${DOC}/Word.h.dvi from ${IN}/Word.h.pamphlet 
	@${DOCUMENT} dvi Word.h ${DOC} Word.h ${NOISE}

@
\section{WordParser}
<<WordParser.h (OUT from IN)>>=
${OUT}/WordParser.h: ${IN}/WordParser.h.pamphlet
	@echo 99 making ${OUT}/WordParser.h from ${IN}/WordParser.h.pamphlet
	@${DOCUMENT} src WordParser.h ${OUT}

@
<<WordParser.h.dvi (DOC from IN)>>=
${DOC}/WordParser.h.dvi: ${IN}/WordParser.h.pamphlet ${DOC}/axiom.sty
	@echo 100 making ${DOC}/WordParser.h.dvi from ${IN}/WordParser.h.pamphlet 
	@${DOCUMENT} dvi WordParser.h ${DOC} WordParser.h ${NOISE}

@
<<WordRep.h (OUT from IN)>>=
${OUT}/WordRep.h: ${IN}/WordRep.h.pamphlet
	@echo 101 making ${OUT}/WordRep.h from ${IN}/WordRep.h.pamphlet
	@${DOCUMENT} src WordRep.h ${OUT}

@
<<WordRep.h.dvi (DOC from IN)>>=
${DOC}/WordRep.h.dvi: ${IN}/WordRep.h.pamphlet ${DOC}/axiom.sty
	@echo 102 making ${DOC}/WordRep.h.dvi from ${IN}/WordRep.h.pamphlet 
	@${DOCUMENT} dvi WordRep.h ${DOC} WordRep.h ${NOISE}

@
\section{axiom.sty}
<<axiom.sty (DOC from IN)>>=
${DOC}/axiom.sty: ${SRC}/doc/axiom.sty.pamphlet
	@ echo 103 making ${DOC}/axiom.sty from ${SRC}/doc/axiom.sty.pamphlet
	@${DOCUMENT} chunk "axiom.sty" ${SRC}/doc/axiom.sty ${DOC} axiom.sty
 
@
<<*>>=
<<environment>>

FILES= ${OUT}/AbelianWord.h ${OUT}/AdaptSimpson.h \
       ${OUT}/Associations.h ${OUT}/BlackBox.h ${OUT}/BTree.h \
       ${OUT}/Cell.h ${OUT}/Chars.h ${OUT}/conversions.h \
       ${OUT}/coordsys.h ${OUT}/cwmtx.h \
       ${OUT}/DArray.h ${OUT}/DCell.h ${OUT}/DList.h \
       ${OUT}/Elt.h ${OUT}/EltRep.h ${OUT}/File.h \
       ${OUT}/GCD.h ${OUT}/Generator.h ${OUT}/Int2.h \
       ${OUT}/IStreamPoll.h \
       ${OUT}/KripkeStructure.h ${OUT}/KState.h \
       ${OUT}/LargeNumber.h ${OUT}/List.h \
       ${OUT}/LogWatcher.h \
       ${OUT}/matrix.h ${OUT}/Pair.h \
       ${OUT}/Proba.h ${OUT}/quatern.h \
       ${OUT}/QuickAssociations.h \
       ${OUT}/RandomNumbers.h \
       ${OUT}/Regex.h ${OUT}/ServerSocket.h ${OUT}/Set.h \
       ${OUT}/smatrix.h ${OUT}/Socket.h \
       ${OUT}/SocketException.h ${OUT}/Stack.h \
       ${OUT}/String.h ${OUT}/svector.h \
       ${OUT}/Timer.h ${OUT}/Type.h ${OUT}/vector1.h \
       ${OUT}/Vector.h ${OUT}/VectorPtr.h ${OUT}/WordData.h \
       ${OUT}/Word.h ${OUT}/WordParser.h ${OUT}/WordRep.h

DOCFILES= ${DOC}/AbelianWord.h.dvi ${DOC}/AdaptSimpson.h.dvi \
          ${DOC}/Associations.h.dvi ${DOC}/BlackBox.h.dvi ${DOC}/BTree.h.dvi \
          ${DOC}/Cell.h.dvi ${DOC}/Chars.h.dvi ${DOC}/conversions.h.dvi \
          ${DOC}/coordsys.h.dvi ${DOC}/cwmtx.h.dvi \
          ${DOC}/DArray.h.dvi ${DOC}/DCell.h.dvi ${DOC}/DList.h.dvi \
          ${DOC}/Elt.h.dvi ${DOC}/Elt.h.dvi ${DOC}/File.h.dvi \
          ${DOC}/GCD.h.dvi ${DOC}/Generator.h.dvi ${DOC}/Int2.h.dvi \
          ${DOC}/IStreamPoll.h.dvi \
          ${DOC}/KripkeStructure.h.dvi ${DOC}/KState.h.dvi \
          ${DOC}/LargeNumber.h.dvi ${DOC}/List.h.dvi \
          ${DOC}/LogWatcher.h.dvi \
          ${DOC}/matrix.h.dvi ${DOC}/Pair.h.dvi \
          ${DOC}/Proba.h.dvi ${DOC}/quatern.h.dvi \
          ${DOC}/QuickAssociations.h.dvi \
          ${DOC}/RandomNumbers.h.dvi \
          ${DOC}/Regex.h.dvi ${DOC}/ServerSocket.h.dvi ${DOC}/Set.h.dvi \
          ${DOC}/smatrix.h.dvi ${DOC}/Socket.h.dvi \
          ${DOC}/SocketException.h.dvi ${DOC}/Stack.h.dvi \
          ${DOC}/String.h.dvi ${DOC}/svector.h.dvi \
          ${DOC}/Timer.h.dvi ${DOC}/Type.h.dvi ${DOC}/vector1.h.dvi \
          ${DOC}/Vector.h.dvi ${DOC}/VectorPtr.h.dvi ${DOC}/WordData.h.dvi \
          ${DOC}/Word.h.dvi ${DOC}/WordParser.h.dvi ${DOC}/WordRep.h.dvi

all: ${FILES} ${DOCFILES}
	@echo 104 finished ${IN}

<<AbelianWord.h (OUT from IN)>>
<<AbelianWord.h.dvi (DOC from IN)>>

<<AdaptSimpson.h (OUT from IN)>>
<<AdaptSimpson.h.dvi (DOC from IN)>>

<<Associations.h (OUT from IN)>>
<<Associations.h.dvi (DOC from IN)>>

<<BlackBox.h (OUT from IN)>>
<<BlackBox.h.dvi (DOC from IN)>>

<<BTree.h (OUT from IN)>>
<<BTree.h.dvi (DOC from IN)>>

<<Cell.h (OUT from IN)>>
<<Cell.h.dvi (DOC from IN)>>

<<Chars.h (OUT from IN)>>
<<Chars.h.dvi (DOC from IN)>>

<<conversions.h (OUT from IN)>>
<<conversions.h.dvi (DOC from IN)>>

<<coordsys.h (OUT from IN)>>
<<coordsys.h.dvi (DOC from IN)>>

<<cwmtx.h (OUT from IN)>>
<<cwmtx.h.dvi (DOC from IN)>>

<<DArray.h (OUT from IN)>>
<<DArray.h.dvi (DOC from IN)>>

<<DCell.h (OUT from IN)>>
<<DCell.h.dvi (DOC from IN)>>

<<DList.h (OUT from IN)>>
<<DList.h.dvi (DOC from IN)>>

<<Elt.h (OUT from IN)>>
<<Elt.h.dvi (DOC from IN)>>

<<EltRep.h (OUT from IN)>>
<<EltRep.h.dvi (DOC from IN)>>

<<File.h (OUT from IN)>>
<<File.h.dvi (DOC from IN)>>

<<GCD.h (OUT from IN)>>
<<GCD.h.dvi (DOC from IN)>>

<<Generator.h (OUT from IN)>>
<<Generator.h.dvi (DOC from IN)>>

<<Int2.h (OUT from IN)>>
<<Int2.h.dvi (DOC from IN)>>

<<IStreamPoll.h (OUT from IN)>>
<<IStreamPoll.h.dvi (DOC from IN)>>

<<KripkeStructure.h (OUT from IN)>>
<<KripkeStructure.h.dvi (DOC from IN)>>

<<KState.h (OUT from IN)>>
<<KState.h.dvi (DOC from IN)>>

<<LargeNumber.h (OUT from IN)>>
<<LargeNumber.h.dvi (DOC from IN)>>

<<List.h (OUT from IN)>>
<<List.h.dvi (DOC from IN)>>

<<LogWatcher.h (OUT from IN)>>
<<LogWatcher.h.dvi (DOC from IN)>>

<<matrix.h (OUT from IN)>>
<<matrix.h.dvi (DOC from IN)>>

<<Pair.h (OUT from IN)>>
<<Pair.h.dvi (DOC from IN)>>

<<Proba.h (OUT from IN)>>
<<Proba.h.dvi (DOC from IN)>>

<<quatern.h (OUT from IN)>>
<<quatern.h.dvi (DOC from IN)>>

<<QuickAssociations.h (OUT from IN)>>
<<QuickAssociations.h.dvi (DOC from IN)>>

<<RandomNumbers.h (OUT from IN)>>
<<RandomNumbers.h.dvi (DOC from IN)>>

<<Regex.h (OUT from IN)>>
<<Regex.h.dvi (DOC from IN)>>

<<ServerSocket.h (OUT from IN)>>
<<ServerSocket.h.dvi (DOC from IN)>>

<<Set.h (OUT from IN)>>
<<Set.h.dvi (DOC from IN)>>

<<smatrix.h (OUT from IN)>>
<<smatrix.h.dvi (DOC from IN)>>

<<Socket.h (OUT from IN)>>
<<Socket.h.dvi (DOC from IN)>>

<<SocketException.h (OUT from IN)>>
<<SocketException.h.dvi (DOC from IN)>>

<<Stack.h (OUT from IN)>>
<<Stack.h.dvi (DOC from IN)>>

<<String.h (OUT from IN)>>
<<String.h.dvi (DOC from IN)>>

<<svector.h (OUT from IN)>>
<<svector.h.dvi (DOC from IN)>>

<<Timer.h (OUT from IN)>>
<<Timer.h.dvi (DOC from IN)>>

<<Type.h (OUT from IN)>>
<<Type.h.dvi (DOC from IN)>>

<<vector1.h (OUT from IN)>>
<<vector1.h.dvi (DOC from IN)>>

<<Vector.h (OUT from IN)>>
<<Vector.h.dvi (DOC from IN)>>

<<VectorPtr.h (OUT from IN)>>
<<VectorPtr.h.dvi (DOC from IN)>>

<<WordData.h (OUT from IN)>>
<<WordData.h.dvi (DOC from IN)>>

<<Word.h (OUT from IN)>>
<<Word.h.dvi (DOC from IN)>>

<<WordParser.h (OUT from IN)>>
<<WordParser.h.dvi (DOC from IN)>>

<<WordRep.h (OUT from IN)>>
<<WordRep.h.dvi (DOC from IN)>>

<<axiom.sty (DOC from IN)>>
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
