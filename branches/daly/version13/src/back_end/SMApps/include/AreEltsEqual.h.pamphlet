\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{src/backend/SMApps/include/AreEltsEqual.h}
\author{Dmitry Bormotov}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{include}
<<include>>=
#include "Supervisor.h"
#include "SetOfWordsChecker.h"
#include "NilpotentProblems.h"
#include "GeneticProblems.h"

@
\section{class AreEltsEqual}
<<class AreEltsEqual>>=
class AreEltsEqual : public Supervisor
{
public:
  AreEltsEqual( const class SMWord&, const class SMWord& );
  void viewStructure(ostream& ostr) const;  // overrides SMObject
  void takeControl( );         // overrides ComputationManager
  void start( ) { }            // overrides ComputationManager
  void terminate( ) { }        // overrides ComputationManager

private:
  const SMWord& word1;
  const SMWord& word2;
  SetOfWordsChecker theChecker;
  // GCM components this uses; only for automatic ARC passing:
  MirrorSubordinate normalClosure;
  MirrorSubordinate abelianInvariants;
  MirrorSubordinate kbSupervisor;
  MirrorSubordinate agSupervisor;
  MirrorSubordinate nilpotentQuotients;
  Subordinate<AreEltsEqual,NilpotentWPInQuotients> nilpotentWPInQuotients;
  MirrorSubordinate computeBasis;
  Subordinate<AreEltsEqual,NilpotentWP> nilpotentWP;
  Subordinate<AreEltsEqual, GeneticWPCM> genetic;
};

@
\section{license}
<<license>>=
// Copyright (C) 1994 The New York Group Theory Cooperative
// See magnus/doc/COPYRIGHT for the full notice.
@
<<*>>=
// src/backend/SMApps/include/AreEltsEqual.h
#ifndef _AreEltsEqual_h_
#define _AreEltsEqual_h_

<<license>>
<<include>>
<<class AreEltsEqual>>
#endif
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
