\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{src/backend/SMApps/include/IsAbelianProblem.h}
\author{Dmitry Bormotov}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{include}
<<include>>=
#include "Supervisor.h"
#include "SMFPGroup.h"
#include "NilpotentQuotients.h"
#include "GeneticProblems.h"

@
\section{class IsAbelianChecker}
<<class IsAbelianChecker>>=
class IsAbelianChecker
{
public:
  IsAbelianChecker( class SMFPGroup& );
  Trichotomy isAbelian( );
  Chars getExplanation( ) { return explanation; }
  Chars commutator( VectorOf<int> components );
  bool haveDetails ( ) const;
  Chars getDetailsFileName( ) const;

private:
  FPGroup G;
  class GIC& gic;
  class GCM& gcm;
  bool triedAbelianization;
  bool triedOneRelator;
  Chars explanation;
  DetailedReport abelianDetails;
};

@
\section{class IsAbelianProblem}
<<class IsAbelianProblem>>=
class IsAbelianProblem : public Supervisor
{
public:
  IsAbelianProblem( class SMFPGroup& );
  void viewStructure(ostream& ostr) const;  // overrides SMObject
  void takeControl( );         // overrides ComputationManager
  void start( );              // overrides ComputationManager
  void terminate( );          // overrides ComputationManager

private:
  SMFPGroup& theGroup;
  IsAbelianChecker theChecker;
  MirrorSubordinate normalClosure;
  MirrorSubordinate abelianInvariants;
  MirrorSubordinate kbSupervisor;
  MirrorSubordinate agSupervisor;
  MirrorSubordinate computeBasis;
  Subordinate<IsAbelianProblem,NilpotentWPInQuotients> nilpotentWPInQuotients;
  MirrorSubordinate nilpotentQuotients;
  Subordinate<IsAbelianProblem,NilpotentWP> nilpotentWP;
  Subordinate<IsAbelianProblem, GeneticWPCM> genetic;
};

@
\section{license}
<<license>>=
// Copyright (C) 1994 The New York Group Theory Cooperative
// See magnus/doc/COPYRIGHT for the full notice.
@
<<*>>=
// src/backend/SMApps/include/IsAbelianProblem.h
#ifndef _IsAbelianProblem_h_
#define _IsAbelianProblem_h_

<<license>>
<<include>>
<<class IsAbelianChecker>>
<<class IsAbelianProblem>>

inline
bool IsAbelianChecker::haveDetails ( ) const
{
  return abelianDetails.haveDetails();
}

inline
Chars IsAbelianChecker::getDetailsFileName( ) const
{ 
  return abelianDetails.getFileName(); 
}

#endif
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
