\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{src/backend/SMApps/include/SetOfWordsChecker.h}
\author{Dmitry Bormotov}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{include}
<<include>>=
#include "SMFPGroup.h"
#include "Word.h"

@
\section{class SetOfWordsChecker}
<<class SetOfWordsChecker>>=
class SetOfWordsChecker
{
public:
  SetOfWordsChecker( const SetOf<Word>&, const class SMFPGroup& );
  SetOfWordsChecker( const VectorOf<Word>&, const class SMFPGroup& );
  SetOfWordsChecker( const class SMFPGroup& );
  Trichotomy isTrivial( );
  Chars getExplanation( ) const { return explanation; }
  GIC::AlgorithmID getAlgorithm( ) const { return solutionAlgorithm; }
  void replaceTheSet( const VectorOf<Word>& V);
  //  void replaceTheSet( const VectorOf<Word>& V) { theWords = V; }
  void replaceTheSet( const SetOf<Word>& );
  void enablePutDetailsToFile( );
  void disablePutDetailsToFile( );
  bool haveDetails( ) const;
  Chars getDecompositionFileName( ) const;
  Chars getDehnTransformationFileName( ) const;

private:
  void init( );
  VectorOf<Word> theWords;
  FPGroup G;
  const class GIC& gic;
  class GCM& gcm;
  bool triedAbelianization;
  GIC::AlgorithmID solutionAlgorithm;
  Chars explanation;
  VectorOf<bool> theTrivialWords;
  bool keepDetails;
  DetailedReport dehnsDetails;
  DetailedReport wordsDecomposition;
};

@
\section{license}
<<license>>=
// Copyright (C) 1994 The New York Group Theory Cooperative
// See magnus/doc/COPYRIGHT for the full notice.
@
<<*>>=
// src/backend/SMApps/include/SetOfWordsChecker.h
#ifndef _SetOfWordsChecker_h_
#define _SetOfWordsChecker_h_

<<license>>
<<include>>
<<class SetOfWordsChecker>>

inline
void SetOfWordsChecker::enablePutDetailsToFile( ) 
{ 
  keepDetails = true; 
}

inline
void SetOfWordsChecker::disablePutDetailsToFile( ) 
{ 
  keepDetails = false; 
}

inline
bool SetOfWordsChecker::haveDetails ( ) const 
{ 
  return wordsDecomposition.haveDetails(); 
}

inline
Chars SetOfWordsChecker::getDecompositionFileName( ) const 
{ 
  return wordsDecomposition.getFileName(); 
}

inline
Chars SetOfWordsChecker::getDehnTransformationFileName( ) const 
{ 
  return dehnsDetails.getFileName(); 
}

#endif
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
