\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{src/backend/AProducts/include/AmalgamatedProductParser.h}
\author{Dmitry Pechkin}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{AmalgamatedProductParser.h}
The grammar for an Amalgamated Product of Free Groups(see the Word grammar):
\begin{verbatim}

 <AmalgamatedProductOfFreeGroups> ::= '<' <free group> '*' <free group>
         ('|' | ';' | ':') (<word> '=' <word>)* '>'

 <APwithOneRelator> ::= '<' <free group> '*' <free group>
         ('|' | ';' | ':') (<word> '=' <word>)? '>'
\end{verbatim}
\section{include}
<<include>>=
#include "PresentationParser.h"
#include "APofFreeGroups.h"
#include "APwithOneRelator.h"

@
\section{class AmalgamatedProductParser}
<<class AmalgamatedProductParser>>=
class AmalgamatedProductParser : protected PresentationParser
{
public:
  AmalgamatedProductParser(istream &istr) : PresentationParser(istr) { }
  // Initialize the parser with the istream from which to read.

  // Destructor supplied by compiler.

  VectorOf<Word> parseAPRelator(const VectorOf<Chars>& names, Chars& errMesg);

  VectorOf<Word> parseAPRelatorList(const VectorOf<Chars>& names,
				    Chars& errMesg, int axRelators);
  
  void parseFactorsAndRelations(FreeGroup& f1, FreeGroup& f2,
				VectorOf<Word>& gens1, VectorOf<Word>& gens1,
				int maxRelators, Chars& errMesg);
  
  AmalgProductOfFreeGroupsRep* parseAPofFreeGroups( Chars& errMesg );
  
  APwithOneRelatorRep* parseAPwithOneRelator( Chars& errMesg );

};

@
\section{license}
<<license>>=
// Copyright (C) 1994 The New York Group Theory Cooperative
// See magnus/doc/COPYRIGHT for the full notice.
@
<<*>>=
// src/backend/AProducts/include/AmalgamatedProductParser.h
#ifndef _AMALG_PRODUCT_PARSER_H_
#define _AMALG_PRODUCT_PARSER_H_

<<license>>
<<include>>
<<class AmalgamatedProductParser>>
#endif
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
