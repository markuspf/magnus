\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{src/backend/Matrix/include/HomomorphismBuilder.h}
\author{Dmitry Bormotov}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{include}
<<include>>=
#include "FPGroup.h"
#include "Matrix.h"

@
\section{class HomomorphismBuilder}
<<class HomomorphismBuilder>>=
template <class R> class HomomorphismBuilder 
{
 public:
  HomomorphismBuilder(FPGroup& G, int sizeOfMatrix = 2) : group( G ), 
    matrixSize( sizeOfMatrix ), bDone( false ), bStart( false ),
    homomorphism( G.numberOfGenerators() ), 
    invertedMatrices( G.numberOfGenerators() )
  {
  #if SAFETY > 0
    if( sizeOfMatrix < 2 )
      error("HomomorphismBuilder::HomomorphismBuilder( FPGroup&, int ) :"
	    "size of matrix must be 2 or more.");
    if( G.numberOfGenerators() == 0 ) 
      error("HomomorphismBuilder::HomomorphismBuilder( FPGroup&, int ) :"
	    "The group must be non trivial.");
  #endif  
  }
  
  void startComputation( ) 
  {
  #if SAFETY > 0   
    if ( bStart )
      error("void HomomorphismBuilder::startComputation( ) : "
	    "the computation has been already started.");
  #endif
  
    bStart = true;
    bDone = false;

  #ifdef DEBUG
    iterCount = 0;
  #endif
  }  

  void continueComputation( );
  bool done( ) const { return bDone; }

  VectorOf< Matrix<R> > getHomomorphism( ) const 
  {
  #if SAFETY > 0
    if ( !bDone )
      error("VectorOf< Matrix<R> > HomomorphismBuilder::getHomomorpism() const"
	    " : tried to get result before the computation is finished.");
  #endif

    return homomorphism;
  }

  bool bDone;
  bool bStart;
  
  VectorOf< Matrix<R> > homomorphism;
  VectorOf< Matrix<R> > invertedMatrices;
  int matrixSize;
  FPGroup& group;

  void finishComputation( ) 
  {
    bDone = true;
    bStart = false;
    
  #ifdef DEBUG
    cout << iterCount << endl;
  #endif
  }

#ifdef DEBUG
  int iterCount;
//  friend int main( );
#endif

};

@
\section{license}
<<license>>=
// Copyright (C) 1994 The New York Group Theory Cooperative
// See magnus/doc/COPYRIGHT for the full notice.
@
<<*>>=
// src/backend/Matrix/include/HomomorphismBuilder.h
#ifndef _HOMOMORPHISM_BUILDER_H_
#define _HOMOMORPHISM_BUILDER_H_

<<license>>
<<include>>
<<class HomomorphismBuilder>>
#endif
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}



