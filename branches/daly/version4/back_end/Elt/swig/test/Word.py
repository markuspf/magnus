###this is a test file by xuxw(xuxw76@yahoo.com)
import Magnus
g1=Magnus.Generator(3)
g2=Magnus.Generator(4)
a=Magnus.Word( )
b=Magnus.WordFromList([g1,g2])
c=Magnus.WordFromGenerator(g1)
a.type( )
a.length( )
b.nextInShortLex(1)
b.nextFreelyReduced(1)
b.nextCyclicallyReduced(1)
b.subword(1,1)
b.initialSegment(1)
b.terminalSegment(1)
b.findAgreement(c)
b.agreementLength(c)
b.shortenByRelator(c)
b.numberOfOccurrences(g1)
b.exponentSum(g1)
b.allExponentSumsZero( )
b.isProperPower( )
b.maxOccurringGenerator( )
b.replaceGeneratorWithWord(g1, c)
b.replaceGenerators([c])
b.replaceSubword(1,1,c)
b.freelyReduce( )
b.cyclicallyReduce()
b.cyclicallyPermute(1)
b.inverse( )
b.wordByLexRank( 1,1)
b[1]
b[1]=g2
a!=b
hash(b)
len(b)
c=a*b
print b
b.__invert__()
Magnus.maximalRoot(b)
Magnus.closeUnderInverses([a,b])
Magnus.closeUnderCyclicPermutations([a,b])
Magnus.symmetrise([a,b])
Magnus.cancellationLambda([a,b])
Magnus.hasMetricSmallCancellation([a,b], 1)
###inherited from Elt
b.debugPrint()