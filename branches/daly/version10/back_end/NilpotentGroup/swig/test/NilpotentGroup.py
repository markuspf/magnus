###this is a test file by xuxw(xuxw76@yahoo.com)
import Magnus
w1=Magnus.Word()
w2=Magnus.Word()
pw1=Magnus.PolyWord()
pw2=Magnus.PolyWord()
g=Magnus.Generator(2)
vc=["x1","x2"]
a=Magnus.NilpotentGroup(vc, 1, [w1,w2],0)
b=Magnus.NilpotentGroupFromVector(vc, 1,0)
c=Magnus.NilpotentGroupFromIntVector(1,1,[w1,w2],0)
d=Magnus.NilpotentGroupFromInt(1,1,0)
a.initialize()  
x=a.type( )
x=a.isInitialized()  
x=a.relators()  
x=a.relationSubgroupGenerators()  
x=a.basis()  
x=a.basisNames()  
x=a.commutators()  
x=a.nilpotencyClass()  
x=a.collector()  
x=a.theHirschNumber()  
i=1
j=1
x=a.isFreeNilpotent(i,j)  
x=a.minimalNilpotencyClass( )  
x=a.isMalcevBasis()  
x=a.orderOfTheTorsionSubgroup( )  
x=a.makePresentation()  
x=a.getLCSterm(1)  
x=a.getLCSQuotient(1 )  
x=a.inverseAuto([w1,w2])  
x=a.decompose(w1)  
x=a.decomposeFromPolyWord(pw1)  
x=a.toWord(pw1)  
x=a.toCommutatorWord(pw1)  
x=a.asDecomposition(pw1)  
x=a.weightOf(w1)  
x=a.weightOfFromPolyWord(pw1)  
x=a.orderOfBasic(g)  
x=a.orderOf(w1)  
x=a.orderOfFromPolyWord(pw1)  
x=a.centralizer( w1)  
x=a.isInCommutatorSubgroup(w1)  
x=a.isCentral(w1)  
a.maximalRoot(w1, pw1, 1 )  
x=a.maximalRootFromPolyWord(pw1, pw2, 1 )  
x=a.isProperPower(w1)  
x=a.isProperPowerFromPolyWord(pw1)  
a.printBasis() 
