###this is a test file by xuxw(xuxw76@yahoo.com)
import Magnus
w1=Magnus.Word()
w2=Magnus.Word()
pw1=Magnus.PolyWord()
pw2=Magnus.PolyWord()
g=Magnus.Generator(2)
vc=["x1","x2"]
ng=Magnus.NilpotentGroup(vc, 1, [w1,w2],0)
######
a=Magnus.SGOfNilpotentGroup(ng, [w1,w2]);
b=Magnus.SGOfNilpotentGroup(ng, [w1,w2]);
a.initPreimage( )  
a.initParent( )  
a.initBasis( )  
x=a.parentGroup()  
x=a.preimageBasis()  
x=a.preimageIsInitialized( )  
x=a.parentIsInitialized( )  
x=a.basisIsInitialized( )  
x=a.type( ) ;
x=a.actualType( )  
x=a.basis()  
x=a.basisNames()  
x=a.theHirschNumber()  
x=a.index()  
x=a.isTrivial()  
x=a.isCentral()  
x=a.isNormal()  
x=a.isAbelian()  
x=a.subgroupClass()  
x=a.order()  
x=a.normalClosureBasis()  
x=a.normalClosureGens()  
x=a.makePresentation()  
x=a.join(b)  
x=a.joinFromVector([w1,w2])  
x=a.contains([w1,w2])  
x=a.containsFromSGOfNilpotentGroup(b)  
x=a.equalTo(q)  
x=a.containsFromWord(w1)  
x=a.decompose(pw1, pw2)  
a.readIPC("dgfdg")  
x=a.asDecomposition( pw1 )  
a.printBasis()
a.writeIPC() 
